{"version":3,"sources":["components/style.module.css","base.js","components/Home.js","components/Auth.js","components/Login.js","components/SignUp.js","components/PrivateRoute.js","components/CompleteRegistration.js","components/SucessPage.js","components/ReferalPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","centerPosition","content","input","app","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","Home","react_default","a","createElement","Fragment","onClick","auth","signOut","AuthContext","React","createContext","AuthProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","currentUser","setCurrentUser","_useState3","_useState4","pending","setPending","useEffect","onAuthStateChanged","user","Provider","value","withRouter","history","handleLogin","useCallback","_ref2","asyncToGenerator","regenerator_default","mark","_callee","event","_event$target$element","email","password","wrap","_context","prev","next","preventDefault","target","elements","signInWithEmailAndPassword","push","t0","alert","stop","_x","apply","this","arguments","useContext","react_router","to","onSubmit","name","type","placeholder","emailVer","handleCodeInApp","url","handleSignUp","createUserWithEmailAndPassword","then","userCredential","window","localStorage","setItem","sendSignInLinkToEmail","console","log","PrivateRoute","RouteComponent","component","rest","objectWithoutProperties","assign","render","routeProps","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","CompleteRegistration","newUserRef","collection","doc","concat","getItem","_React$useState","_React$useState2","isNewValue","newValueHandler","fetch","data","json","set","ip","id","points","shareLink","catch","err","SucessPage","props","updateUser","_React$useState3","_React$useState4","number","plus","_React$useState5","_React$useState6","usersLength","setUsers","orderBy","get","q","counter","size","forEach","exists","className","s","rate","sum","toFixed","countPercent","InputGroup","Text","Form","Control","e","select","setSelectionRange","navigator","clipboard","writeText","copyText","readOnly","react_router_dom","ReferalPage","location","useLocation","path","pathname","emailUpdater","pointsUpdater","redirect","setRedirect","where","update","App","Auth_AuthProvider","Container","Row","Col","components_PrivateRoute","exact","Login","SignUp","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0426c11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"centerPosition\":\"style_centerPosition__1K2sH\",\"content\":\"style_content__1RHDI\",\"input\":\"style_input__tHm6F\"};","import * as firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst app = firebase.initializeApp({\n  apiKey: \"AIzaSyAk9YrjyfvDM-4va-X7b-__Y8UwkSOtynE\",\n  authDomain: \"simpleproject-f43d9.firebaseapp.com\",\n  projectId: \"simpleproject-f43d9\",\n  storageBucket: \"simpleproject-f43d9.appspot.com\",\n  messagingSenderId: \"946267297811\",\n  appId: \"1:946267297811:web:c8e7eb2a90b99243ad47e6\",\n  measurementId: \"G-2E6WXX3YWD\"\n});\n\nexport const db = app.firestore();\n\nexport const actionCodeSettings = () => {\n  // URL you want to redirect back to. The domain (www.example.com) for this\n  // URL must be in the authorized domains list in the Firebase Console.\n  let url = `https://simpleproject-f43d9.web.app/goto?user=ub1947`;\n  // This must be true.\n  let handleCodeInApp = true;\n  return {\n      url,\n      handleCodeInApp\n  }\n}\nexport default app;","import React from \"react\";\nimport app from \"../base\";\n\nconst Home = () => {\n  return (\n    <>\n      <h1>Home</h1>\n      <button onClick={() => app.auth().signOut()}>Sign out</button>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport app from \"../base.js\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState(true);\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged((user) => {\n      setCurrentUser(user)\n      setPending(false)\n    });\n  }, []);\n\n  if(pending){\n    return <>Loading...</>\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport app from \"../base.js\";\nimport { AuthContext } from \"./Auth.js\";\n\nconst Login = ({ history }) => {\n  const handleLogin = useCallback(\n    async event => {\n      event.preventDefault();\n      const { email, password } = event.target.elements;\n      try {\n        await app\n          .auth()\n          .signInWithEmailAndPassword(email.value, password.value);\n        history.push(\"/\");\n      } catch (error) {\n        alert(error);\n      }\n    },\n    [history]\n  );\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div>\n      <h1>Log in</h1>\n      <form onSubmit={handleLogin}>\n        <label>\n          Email\n          <input name=\"email\" type=\"email\" placeholder=\"Email\" />\n        </label>\n        <label>\n          Password\n          <input name=\"password\" type=\"password\" placeholder=\"Password\" />\n        </label>\n        <button type=\"submit\">Log in</button>\n      </form>\n    </div>\n  );\n};\n\nexport default withRouter(Login);\n","import React, { useCallback } from \"react\";\nimport { withRouter } from \"react-router\";\nimport app from \"../base\";\n\nconst emailVer = {\n  handleCodeInApp: true,\n  url: `https://simpleproject-f43d9.web.app/goto?user=ub1947`\n}\n\nconst SignUp = ({ history }) => {\n  const handleSignUp = useCallback(async event => {\n    event.preventDefault();\n    const { email, password } = event.target.elements;\n    try {\n      await app\n        .auth()\n        .createUserWithEmailAndPassword(email.value, \"qs351!\")\n        .then((userCredential) => {\n          // Signed in \n          // debugger\n          const user = userCredential.user;\n        })\n        window.localStorage.setItem('email', email.value);\n      await app\n        .auth()\n        .sendSignInLinkToEmail(email.value,emailVer)\n        .then(function() {\n          console.log(\"success\")\n          history.push(\"/\");\n          // Verification email sent.\n        })\n    } catch (error) {\n      alert(error);\n    }\n  }, [history]);\n\n  return (\n    <div>\n      <h1>Sign up</h1>\n      <form onSubmit={handleSignUp}>\n        <label>\n          Email\n          <input name=\"email\" type=\"email\" placeholder=\"Email\" />\n        </label>\n        <button type=\"submit\">Sign Up</button>\n      </form>\n    </div>\n  );\n};\n\nexport default withRouter(SignUp);\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n  const {currentUser} = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={routeProps =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={\"/signup\"} />\n        )\n      }\n    />\n  );\n};\n\n\nexport default PrivateRoute","import React, { useCallback } from \"react\";\nimport { Redirect } from \"react-router\";\nimport app, { db } from \"../base\";\n\nfunction makeid(length) {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() *\n            charactersLength));\n    }\n    return result;\n}\n\nconst CompleteRegistration = () => {\n    const newUserRef = db.collection(\"users\").doc(`${window.localStorage.getItem('email')}`);\n    const [isNewValue, newValueHandler] = React.useState(false)\n    // debugger\n    React.useEffect(() => {\n        fetch('https://geo.ipify.org/api/v2/country?apiKey=at_etmOEjkHehGi2BpHy84aGCSOfFa96')\n            .then(function (data) {\n                // debugger\n                return data.json()\n            })\n            .then((data) => {\n                newUserRef.set({\n                    ip: data.ip,\n                    email: window.localStorage.getItem('email'),\n                    id: makeid(20),\n                    points: 1,\n                    shareLink: `/link/referal/${makeid(35)}`\n                });\n            })\n            .then(() => {\n                newValueHandler(true)\n            })\n            .catch(err => {\n                console.log(err);\n            })\n\n    }, [])\n    return (\n        <>\n            {isNewValue && <Redirect to=\"success\" />}\n        </>\n    )\n}\n\nexport default CompleteRegistration","import React from 'react';\nimport s from \"./style.module.css\"\nimport {NavLink} from \"react-router-dom\";\nimport {Form,InputGroup} from \"react-bootstrap\";\nimport {AuthContext} from \"./Auth\"\nimport app, { db } from \"../base\";\n\nconst SucessPage = (props) => {\n    const copyText = e => {\n        e.select();\n        e.setSelectionRange(0, 99999);\n        navigator.clipboard.writeText(e.value);\n    }\n    let [user, updateUser] = React.useState({})\n    let [number, plus] = React.useState(0)\n    let [usersLength, setUsers] = React.useState(0)\n\n    const { currentUser } = React.useContext(AuthContext);\n        const getUser = () =>{\n            db.collection(\"users\")\n            .orderBy(\"points\", \"desc\")\n            .get()\n            .then((q) => {\n                let counter = 0\n                setUsers(q.size)\n                q.forEach(function (doc){\n                    counter++\n                    if(currentUser.email == doc.data().email) {\n                        // plus(number -= 1)\n                        return plus(counter)\n                    };\n                });\n            })\n            .then(() => {\n                db.collection(\"users\").doc(`${currentUser.email}`)\n                .get()\n                .then((doc) => {\n                    if (doc.exists){\n                      // Convert to City object\n                      updateUser(doc.data());\n                      // Use a City instance method\n                      console.log(user);\n                    }\n                    else {\n                        console.log(\"No such document!\");\n                      }\n                })\n            })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    const countPercent = (rate) => {\n        let sum = rate*100/usersLength;\n        if(sum < 10) return 10;\n        if(sum < 50) return 50;\n        return sum.toFixed(0)\n    }\n\n    React.useEffect(() => {\n        getUser()\n    }, [])\n\n    return (\n        <div className={s.centerPosition}>\n            <h2>You are all signed up!</h2>\n            <div className={s.content}>\n                <h3>Your rank is</h3>\n                <h3>{number}</h3>\n                <p>Your points = {user.points} point(s)</p>\n                <p>Top {countPercent(number)}%</p>\n            </div>\n            <div>\n                <h4>Want to increase your rank? See below</h4>\n                <p>Get 2 points per person when you refer with your unique link below:</p>\n                <InputGroup className={s.input} >\n                    <InputGroup.Text>Copy</InputGroup.Text>\n                    <Form.Control \n                        onClick={e => copyText(e.target)} \n                        type=\"text\" \n                        value={`https://simpleproject-f43d9.web.app` + user.shareLink} \n                        readOnly \n                    />\n                </InputGroup>\n            </div>\n            <NavLink to=\"/\">Return to home page</NavLink>\n        </div>\n    )\n}\n\nexport default SucessPage","import React from \"react\";\nimport {useLocation, Redirect} from \"react-router-dom\";\nimport app, { db } from \"../base\";\n\nconst ReferalPage = (props) => {\n    const location = useLocation();\n    const path = `${location.pathname}`;\n    const [email, emailUpdater] = React.useState(\"\");\n    const [points, pointsUpdater] = React.useState(0);\n    const [redirect, setRedirect] = React.useState(false);\n\n    const getSender = () => {\n        db.collection(\"users\")\n        .where(\"shareLink\", \"==\", path)\n        .get()\n        .then((q) => {\n            q.forEach((doc) => {\n                console.log(doc)\n                emailUpdater(doc.data().email)\n                pointsUpdater(doc.data().points)\n            });\n        })\n        .then(() => {\n            db.collection(\"users\").doc(email)\n            .update({\n                points: points+2\n            })\n            .then(()=> {\n                setRedirect(true)\n            })\n        })\n        .catch(err => console.log(err))\n    }\n\n    React.useEffect(() => {\n        getSender()\n    })\n\n    return (\n        <>\n            Referal page...\n            {redirect && <Redirect to=\"/signup\" />}\n        </>\n    )\n}\n\nexport default ReferalPage;","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport { AuthProvider } from \"./components/Auth\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport CompleteRegistration from \"./components/CompleteRegistration\";\nimport SucessPage from \"./components/SucessPage\";\nimport ReferalPage from \"./components/ReferalPage\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <Router>\n        <Container>\n          <Row>\n            <Col>\n              <PrivateRoute exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={SignUp} />\n              <Route path=\"/goto\" component={CompleteRegistration} />\n              <Route exact path=\"/success\" component={SucessPage} />\n              <Route path=\"/link/referal\" component={ReferalPage} />\n            </Col>\n          </Row>\n        </Container>\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}